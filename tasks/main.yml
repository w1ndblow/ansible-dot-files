---
# tasks file for ansible-dot-files

- name: "homebrew> install dependences"
  homebrew:
     name: "{{ item }}"
     state: present
  with_items: "{{ packages.MacOS }}"
  when: ansible_os_family=="Darwin" 

- name: "apt-get> install dependences"
  become: True
  apt:
    update_cache: True
    name: "{{ item }}"
    state: present
  with_items: "{{ packages.Ubuntu }}"
  when: ansible_os_family=="Debian"

- name: "apt-get> install dependeces for old ubuntu"
  become: True
  apt:
    update_cache: True
    name: "{{ item }}"
    state: present
  with_items: "{{ packages.LegacyUbuntu }}"
  when: ansible_os_family=="Debian" and ansible_distribution_major_version | int < 24
 

- name: "yum> install dependences"
  become: True
  yum:
    update_cache: True
    name: "{{ item }}"
    state: present
  with_items: "{{ packages.RedHat }}"
  when: ansible_os_family=="RedHat"


- name: "vim> copy config file"
  copy:
   src: .vimrc
   dest: ~/.vimrc

- name: "ansible> template config file"
  template:
   src: ansible.cfg.j2
   dest: ~/.ansible.cfg

- name: "git> set config"
  git_config:
     name: core.editor 
     scope: global
     value: vim 

- name: "git> download .gitignore files"
  get_url:
   url: https://gist.githubusercontent.com/w1ndblow/704cd1dc5178edc4f751fa5388c8cecc/raw/f31f6f1358cd354bc9996cce96688977161e7d9f/.gitignore
   dest: ~/.gitignore

- name: "git> set global .gitignore file"
  git_config:
     name: core.excludesfile 
     scope: global
     value: ~/.gitignore


- name: "shell> add line to change editor"
  lineinfile:
    path: "{{ item }}"
    line: "export EDITOR=vim"
    create: True
  with_items:
     - ~/.zshrc
     - ~/.bashrc

- name: "shell> add line to change browser"
  lineinfile:
    path: "{{ item }}"
    line: "export BROWSER=google-chrome"
    create: True
  with_items:
     - ~/.zshrc
     - ~/.bashrc

- name: "shell> configure bash"
  block:
  - name: "bash> clone git project"
    git: 
      repo: "https://github.com/magicmonty/bash-git-prompt.git"
      dest: ~/.bash-git-prompt
  - name: "bash> config .bashrc"
    blockinfile:
      path: ~/.bashrc
      block: |
        if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
          GIT_PROMPT_ONLY_IN_REPO=1
          source $HOME/.bash-git-prompt/gitprompt.sh
        fi
  
  - name: "shell> add aliases"
    lineinfile:
      path: ~/.bashrc
      line: "{{ item }}"
      create: True
    with_items:
      - "alias pbcopy='xclip -selection clipboard'"
      - "alias pbpaste='xclip -selection clipboard -o'"

  when: lookup('env','SHELL')=='/bin/bash'

- name: "man> simlink for apparmor"
  become: True
  file: 
    src: /etc/apparmor.d/usr.bin.man
    dest: /etc/apparmor.d/disable/usr.bin.man
    state: link
  when: ansible_os_family=="Debian"

- name: "man> add application for apparmor" 
  become: True
  shell: "apparmor_parser -R /etc/apparmor.d/usr.bin.man"
  ignore_errors: True
  when: ansible_os_family=="Debian"

# TODO implemet offical documentation
# https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository

- name: "group> add current user to docker group"
  become: True
  user:
   name: "{{ansible_user_id}}"
   groups: docker
   append: True
   
- name: "Desktop applications"
  include_tasks: desktop.yml 
  ignore_errors: True
  when: ansible_os_family=="Debian" and Desktop
